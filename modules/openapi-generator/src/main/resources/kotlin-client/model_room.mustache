{{>licenseInfo}}
package {{roomModelPackage}}

import androidx.room.Entity
import androidx.room.Ignore
import androidx.room.PrimaryKey
import androidx.room.ColumnInfo


{{#models}}{{#model}}
/**
* Room model for: {{{description}}}
{{#allVars}}
    * @param {{{name}}} {{{description}}}
{{/allVars}}
*/
@Entity(tableName = "{{classname}}")
data class {{classname}}Entity (
{{#allVars}}
    @ColumnInfo(name = "{{nameInLowerCase}}")
    {{>modelMutable}} {{{name}}}: {{#isArray}}{{#isList}}{{#isUniqueItems}}kotlin.collections.{{#modelMutable}}Mutable{{/modelMutable}}Set{{/isUniqueItems}}{{^isUniqueItems}}kotlin.collections.{{#modelMutable}}Mutable{{/modelMutable}}List{{/isUniqueItems}}{{/isList}}{{^isList}}kotlin.Array{{/isList}}<{{^items.isEnum}}{{^items.isPrimitiveType}}{{^items.isModel}}{{/items.isModel}}{{/items.isPrimitiveType}}{{{items.dataType}}}Entity{{/items.isEnum}}{{#items.isEnum}}{{classname}}.{{{nameInCamelCase}}}{{/items.isEnum}}>{{/isArray}}{{^isEnum}}{{^isArray}}{{{dataType}}}{{/isArray}}{{/isEnum}}{{#isEnum}}{{^isArray}}{{classname}}.{{{nameInCamelCase}}}{{/isArray}}{{/isEnum}}{{>model_room_init_var}},
{{/allVars}}
) {
{{^discriminator}}
    companion object {

        fun {{classname}}Entity.toApiModel() = {{classname}}(
        {{#allVars}}
            {{name}} = this.{{name}},
        {{/allVars}}
        )

        fun {{classname}}.toRoomModel() = {{classname}}Entity(
        {{#allVars}}
            {{name}} = this.{{name}},
        {{/allVars}}
        )
    }
{{/discriminator}}
}
{{/model}}{{/models}}